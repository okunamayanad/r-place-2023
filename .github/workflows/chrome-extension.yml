name: Build Chrome Extension & Upload it to Latest Release (for chrome-extension experimental branch)

on:
  push:
    branches:
      - chrome-extension
    tags:
      - '**'
jobs:
  build_chrome_extension:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        sparse-checkout: chrome-extension
    """
    Disabled because chrome stopped accepting crx files
    # pack zip and read manifest, can be reused in the following steps
    - id: packExtensionDir
      uses: cardinalby/webext-buildtools-pack-extension-dir-action@v1
      with:
        extensionDir: 'chrome-extension'
        zipFilePath: 'build/chrome-extension.zip'
    
    - uses: cardinalby/webext-buildtools-chrome-crx-action@v2
      with:
        # zip file made at the packExtensionDir step
        zipFilePath: 'build/chrome-extension.zip'
        crxFilePath: 'build/chrome-extension.crx'
        # Create a secret named CHROME_CRX_PRIVATE_KEY in your repository settings
        # ssh-keygen -t rsa -m PEM or pack extension with chrome and get private key from the generated .pem file.
        privateKey: ${{ secrets.CHROME_CRX_PRIVATE_KEY }}
        # The following is optional if you need update.xml file
        # updateXmlPath: 'build/update.xml'
        # updateXmlCodebaseUrl: 'https://server.com/extension.crx'
    
    - uses: actions/upload-artifact@v3
      with:
        name: chrome-extension
        path: 'build/chrome-extension.crx'

    - name: upload binaries to release
      uses: softprops/action-gh-release@v1
      if: ${{startsWith(github.ref, 'refs/tags/') }}
      with:
          files: 'build/chrome-extension.crx'
          token: ${{ secrets.PAT }}
  """
  # Zip the extension
  - name: Zip extension
    run: |
      cd chrome-extension
      zip -r ../build/chrome-extension.zip *
    working-directory: ${{ github.workspace }}
    
  # Upload the extension to the artifacts
  - uses: actions/upload-artifact@v3
      with:
        path: 'build/chrome-extension.zip'
  
  # Upload the extension to the release
  - name: upload binaries to release
      uses: softprops/action-gh-release@v1
      if: ${{startsWith(github.ref, 'refs/tags/') }}
      with:
          files: 'build/chrome-extension.zip'
          token: ${{ secrets.PAT }}
  
  # Upload the extension to the chrome web store
  # https://github.com/fregante/chrome-webstore-upload/blob/main/How%20to%20generate%20Google%20API%20keys.md
  - name: Upload & release
      uses: mnao305/chrome-extension-upload@v4.0.1
      with:
        file-path: 'build/chrome-extension.zip'
        extension-id: hogefuga(extension id)
        client-id: ${{ secrets.CLIENT_ID }}
        client-secret: ${{ secrets.CLIENT_SECRET }}
        refresh-token: ${{ secrets.REFRESH_TOKEN }}